name: Test Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:

    runs-on: ubuntu-latest
    env:
      FASTAPI_FF: '{"json_only": False, "file_1": True, "file_2": False, "file_3": True, "file_4": True}'
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
          version: 1.8.2
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true      
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
           path: .venv
           key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root      
        
    - name: Test with pytest
      run: |
        source .venv/bin/activate
        pytest --cov=fastapi_featureflags -v tests/ --disable-warnings
        
    - name: CodeCov
      run: bash <(curl -s https://codecov.io/bash)
